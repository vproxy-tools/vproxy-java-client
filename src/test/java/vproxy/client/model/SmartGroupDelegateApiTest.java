/*
 * vproxy
 * The vproxy http controller api.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package vproxy.client.model;

import org.junit.Before;
import org.junit.Test;
import vproxy.client.ApiException;

import java.util.List;

import static org.junit.Assert.*;
import static vproxy.client.TestUtils.randomName;

/**
 * API tests for SmartGroupDelegateApi
 */
public class SmartGroupDelegateApiTest {

    private final SmartGroupDelegateApi api = new SmartGroupDelegateApi();
    private String sgName;
    private String name;

    @Before
    public void setUp() throws Exception {
        String elgName = randomName("elg");
        sgName = randomName("sg");
        name = randomName("sgd");

        EventLoopGroupCreate elg = new EventLoopGroupCreate();
        elg.setName(elgName);
        new EventLoopGroupApi().addEventLoopGroup(elg);

        ServerGroupCreate sg = new ServerGroupCreate();
        sg.setName(sgName);
        sg.setTimeout(1000);
        sg.setPeriod(2000);
        sg.setUp(2);
        sg.setDown(3);
        sg.setProtocol(CheckProtocol.TCP);
        sg.setMethod(ServerGroupMethod.WRR);
        sg.setEventLoopGroup(elgName);
        new ServerGroupApi().addServerGroup(sg);
    }

    private void addSmartGroupDelegate() throws ApiException {
        SmartGroupDelegateCreate req = new SmartGroupDelegateCreate();
        req.setName(name);
        req.setService("my-service");
        req.setZone("zone0");
        req.setHandledGroup(sgName);
        api.addSmartGroupDelegate(req);
    }

    /**
     * add smart-group-delegate
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addSmartGroupDelegateTest() throws ApiException {
        int oldLen = api.listSmartGroupDelegate().size();

        addSmartGroupDelegate();

        List<SmartGroupDelegate> sgdList = api.listSmartGroupDelegate();
        assertEquals(oldLen + 1, sgdList.size());
        SmartGroupDelegate sgd = api.getSmartGroupDelegate(name);
        assertTrue(sgdList.contains(sgd));
        assertEquals(name, sgd.getName());
        assertEquals("my-service", sgd.getService());
        assertEquals("zone0", sgd.getZone());
        assertEquals(sgName, sgd.getHandledGroup());
    }

    /**
     * get detailed info of one smart-group-delegate
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeSmartGroupDelegateTest() throws ApiException {
        addSmartGroupDelegate();

        SmartGroupDelegateDetail sgd = api.describeSmartGroupDelegate(name);
        assertEquals(name, sgd.getName());
        assertEquals("my-service", sgd.getService());
        assertEquals("zone0", sgd.getZone());
        assertEquals(sgName, sgd.getHandledGroup().getName());
    }

    /**
     * get smart-group-delegate
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSmartGroupDelegateTest() throws ApiException {
        addSmartGroupDelegate();

        SmartGroupDelegate sgd = api.getSmartGroupDelegate(name);

        assertNotNull(sgd);
    }

    /**
     * retrieve smart-group-delegate list
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSmartGroupDelegateTest() throws ApiException {
        List<SmartGroupDelegate> response = api.listSmartGroupDelegate();

        assertNotNull(response);
    }

    /**
     * remove smart-group-delegate
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeSmartGroupDelegateTest() throws ApiException {
        addSmartGroupDelegate();

        List<SmartGroupDelegate> sgdListBefore = api.listSmartGroupDelegate();
        int lenBefore = sgdListBefore.size();
        SmartGroupDelegate sgdObject = api.getSmartGroupDelegate(name);
        assertTrue(sgdListBefore.contains(sgdObject));

        api.removeSmartGroupDelegate(name);

        List<SmartGroupDelegate> sgdListAfter = api.listSmartGroupDelegate();
        int lenAfter = sgdListAfter.size();

        assertEquals(lenBefore - 1, lenAfter);
        assertFalse(sgdListAfter.contains(sgdObject));
    }

}
