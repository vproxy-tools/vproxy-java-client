/*
 * vproxy
 * The vproxy http controller api.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package vproxy.client.model;

import org.junit.Before;
import org.junit.Test;
import vproxy.client.ApiException;

import java.util.List;

import static org.junit.Assert.*;
import static vproxy.client.TestUtils.randomName;

/**
 * API tests for UpstreamApi
 */
public class UpstreamApiTest {

    private final UpstreamApi api = new UpstreamApi();
    private String name;

    @Before
    public void setUp() {
        name = randomName("ups");
    }

    private void addUpstream() throws ApiException {
        UpstreamCreate ups = new UpstreamCreate();
        ups.setName(name);
        api.addUpstream(ups);
    }

    /**
     * add upstream
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addUpstreamTest() throws ApiException {
        int oldLen = api.listUpstream().size();

        addUpstream();

        List<Upstream> upsList = api.listUpstream();
        assertEquals(oldLen + 1, upsList.size());
        Upstream ups = api.getUpstream(name);
        assertTrue(upsList.contains(ups));
        assertEquals(name, ups.getName());
    }

    /**
     * get detailed info of one upstream
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeUpstreamTest() throws ApiException {
        addUpstream();

        UpstreamDetail ups = api.describeUpstream(name);
        assertEquals(name, ups.getName());
        assertNotNull(ups.getServerGroupList());
    }

    /**
     * get upstream
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUpstreamTest() throws ApiException {
        addUpstream();

        Upstream response = api.getUpstream(name);

        assertNotNull(response);
    }

    /**
     * retrieve upstream list
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listUpstreamTest() throws ApiException {
        List<Upstream> response = api.listUpstream();

        assertNotNull(response);
    }

    /**
     * remove upstream
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeUpstreamTest() throws ApiException {
        addUpstream();

        List<Upstream> upsListBefore = api.listUpstream();
        int lenBefore = upsListBefore.size();
        Upstream upsObject = api.getUpstream(name);
        assertTrue(upsListBefore.contains(upsObject));

        api.removeUpstream(name);

        List<Upstream> upsListAfter = api.listUpstream();
        int lenAfter = upsListAfter.size();

        assertEquals(lenBefore - 1, lenAfter);
        assertFalse(upsListAfter.contains(upsObject));
    }

}
