/*
 * vproxy
 * The vproxy http controller api.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package vproxy.client.model;

import org.junit.Before;
import org.junit.Test;
import vproxy.client.ApiException;

import java.util.List;

import static org.junit.Assert.*;
import static vproxy.client.TestUtils.randomName;

/**
 * API tests for SecurityGroupRuleApi
 */
public class SecurityGroupRuleApiTest {

    private final SecurityGroupRuleApi api = new SecurityGroupRuleApi();
    private String secgName;
    private String name;

    @Before
    public void setUp() throws ApiException {
        secgName = randomName("secg");
        name = randomName("secgr");

        SecurityGroupCreate req = new SecurityGroupCreate();
        req.setName(secgName);
        req.setDefaultRule(Rule.ALLOW);
        new SecurityGroupApi().addSecurityGroup(req);
    }

    private void addSecurityGroupRule() throws ApiException {
        SecurityGroupRuleCreate req = new SecurityGroupRuleCreate();
        req.setName(name);
        req.setClientNetwork("127.0.0.0/8");
        req.setProtocol(SecurityGroupProtocol.TCP);
        req.setRule(Rule.ALLOW);
        req.setServerPortMin(80);
        req.setServerPortMax(80);
        api.addSecurityGroupRule(secgName, req);
    }

    /**
     * add security-group-rule into security-group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addSecurityGroupRuleTest() throws ApiException {
        int oldLen = api.listSecurityGroupRule(secgName).size();

        addSecurityGroupRule();

        List<SecurityGroupRule> secgrList = api.listSecurityGroupRule(secgName);
        assertEquals(oldLen + 1, secgrList.size());
        SecurityGroupRule secgr = api.getSecurityGroupRule(secgName, name);
        assertTrue(secgrList.contains(secgr));
        assertEquals(name, secgr.getName());
        assertEquals("127.0.0.0/8", secgr.getClientNetwork());
        assertEquals(SecurityGroupProtocol.TCP, secgr.getProtocol());
        assertEquals(Rule.ALLOW, secgr.getRule());
        assertEquals(80, secgr.getServerPortMin().intValue());
        assertEquals(80, secgr.getServerPortMax().intValue());
    }

    /**
     * get detailed info of one security-group-rule in security-group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeSecurityGroupRuleTest() throws ApiException {
        addSecurityGroupRule();

        SecurityGroupRuleDetail secgr = api.describeSecurityGroupRule(secgName, name);
        assertEquals(name, secgr.getName());
        assertEquals("127.0.0.0/8", secgr.getClientNetwork());
        assertEquals(SecurityGroupProtocol.TCP, secgr.getProtocol());
        assertEquals(Rule.ALLOW, secgr.getRule());
        assertEquals(80, secgr.getServerPortMin().intValue());
        assertEquals(80, secgr.getServerPortMax().intValue());
    }

    /**
     * get security-group-rule in security-group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSecurityGroupRuleTest() throws ApiException {
        addSecurityGroupRule();

        SecurityGroupRule secgr = api.getSecurityGroupRule(secgName, name);

        assertNotNull(secgr);
    }

    /**
     * retrieve security-group-rule list from security-group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSecurityGroupRuleTest() throws ApiException {
        List<SecurityGroupRule> response = api.listSecurityGroupRule(secgName);

        assertNotNull(response);
    }

    /**
     * remove security-group-rule from security-group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeSecurityGroupRuleTest() throws ApiException {
        addSecurityGroupRule();

        List<SecurityGroupRule> secgrListBefore = api.listSecurityGroupRule(secgName);
        int lenBefore = secgrListBefore.size();
        SecurityGroupRule secgrObject = api.getSecurityGroupRule(secgName, name);
        assertTrue(secgrListBefore.contains(secgrObject));

        api.removeSecurityGroupRule(secgName, name);

        List<SecurityGroupRule> secgrListAfter = api.listSecurityGroupRule(secgName);
        int lenAfter = secgrListAfter.size();

        assertEquals(lenBefore - 1, lenAfter);
        assertFalse(secgrListAfter.contains(secgrObject));
    }

}
