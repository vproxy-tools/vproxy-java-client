/*
 * vproxy
 * The vproxy http controller api.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package vproxy.client.model;

import vproxy.client.ApiException;
import vproxy.client.model.ServerGroup;
import vproxy.client.model.ServerGroupCreate;
import vproxy.client.model.ServerGroupDetail;
import vproxy.client.model.ServerGroupInUpstream;
import vproxy.client.model.ServerGroupInUpstreamCreate;
import vproxy.client.model.ServerGroupInUpstreamDetail;
import vproxy.client.model.ServerGroupInUpstreamUpdate;
import vproxy.client.model.ServerGroupUpdate;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServerGroupApi
 */
@Ignore
public class ServerGroupApiTest {

    private final ServerGroupApi api = new ServerGroupApi();

    
    /**
     * add server-group
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addServerGroupTest() throws ApiException {
        ServerGroupCreate body = null;
        api.addServerGroup(body);

        // TODO: test validations
    }
    
    /**
     * add server-group into upstream
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addServerGroupInUpstreamTest() throws ApiException {
        String ups = null;
        ServerGroupInUpstreamCreate body = null;
        api.addServerGroupInUpstream(ups, body);

        // TODO: test validations
    }
    
    /**
     * get detailed info of one server-group
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void describeServerGroupTest() throws ApiException {
        String sg = null;
        ServerGroupDetail response = api.describeServerGroup(sg);

        // TODO: test validations
    }
    
    /**
     * get detailed info of one server-group in upstream
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void describeServerGroupInUpstreamTest() throws ApiException {
        String ups = null;
        String sg = null;
        ServerGroupInUpstreamDetail response = api.describeServerGroupInUpstream(ups, sg);

        // TODO: test validations
    }
    
    /**
     * get server-group
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getServerGroupTest() throws ApiException {
        String sg = null;
        ServerGroup response = api.getServerGroup(sg);

        // TODO: test validations
    }
    
    /**
     * get server-group in upstream
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getServerGroupInUpstreamTest() throws ApiException {
        String ups = null;
        String sg = null;
        ServerGroupInUpstream response = api.getServerGroupInUpstream(ups, sg);

        // TODO: test validations
    }
    
    /**
     * retrieve server-group list
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listServerGroupTest() throws ApiException {
        List<ServerGroup> response = api.listServerGroup();

        // TODO: test validations
    }
    
    /**
     * retrieve server-group list from upstream
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listServerGroupInUpstreamTest() throws ApiException {
        String ups = null;
        List<ServerGroupInUpstream> response = api.listServerGroupInUpstream(ups);

        // TODO: test validations
    }
    
    /**
     * remove server-group
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeServerGroupTest() throws ApiException {
        String sg = null;
        api.removeServerGroup(sg);

        // TODO: test validations
    }
    
    /**
     * remove server-group from upstream
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeServerGroupInUpstreamTest() throws ApiException {
        String ups = null;
        String sg = null;
        api.removeServerGroupInUpstream(ups, sg);

        // TODO: test validations
    }
    
    /**
     * update server-group
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateServerGroupTest() throws ApiException {
        String sg = null;
        ServerGroupUpdate body = null;
        api.updateServerGroup(sg, body);

        // TODO: test validations
    }
    
    /**
     * update server-group in upstream
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateServerGroupInUpstreamTest() throws ApiException {
        String ups = null;
        String sg = null;
        ServerGroupInUpstreamUpdate body = null;
        api.updateServerGroupInUpstream(ups, sg, body);

        // TODO: test validations
    }
    
}
