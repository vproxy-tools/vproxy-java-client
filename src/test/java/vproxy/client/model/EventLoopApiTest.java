/*
 * vproxy
 * The vproxy http controller api.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package vproxy.client.model;

import org.junit.Before;
import vproxy.client.ApiException;
import org.junit.Test;

import java.util.List;

import static org.junit.Assert.*;
import static vproxy.client.TestUtils.randomName;

/**
 * API tests for EventLoopApi
 */
public class EventLoopApiTest {

    private final EventLoopApi api = new EventLoopApi();
    private String elgName;
    private String name;

    @Before
    public void setUp() throws Exception {
        elgName = randomName("elg");
        name = randomName("el");

        EventLoopGroupCreate elg = new EventLoopGroupCreate();
        elg.setName(elgName);
        new EventLoopGroupApi().addEventLoopGroup(elg);
    }

    private void addEventLoop() throws ApiException {
        EventLoopCreate req = new EventLoopCreate();
        req.setName(name);
        api.addEventLoop(elgName, req);
    }

    /**
     * add event-loop into event-loop-group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addEventLoopTest() throws ApiException {
        int oldLen = api.listEventLoop(elgName).size();

        addEventLoop();

        List<EventLoop> elList = api.listEventLoop(elgName);
        assertEquals(oldLen + 1, elList.size());
        EventLoop el = api.getEventLoop(elgName, name);
        assertTrue(elList.contains(el));
        assertEquals(name, el.getName());
    }

    /**
     * get detailed info of one event-loop in event-loop-group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeEventLoopTest() throws ApiException {
        addEventLoop();

        EventLoopDetail el = api.describeEventLoop(elgName, name);

        assertEquals(name, el.getName());
    }

    /**
     * get event-loop in event-loop-group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEventLoopTest() throws ApiException {
        addEventLoop();

        EventLoop response = api.getEventLoop(elgName, name);

        assertNotNull(response);
    }

    /**
     * retrieve event-loop list from event-loop-group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listEventLoopTest() throws ApiException {
        List<EventLoop> response = api.listEventLoop(elgName);

        assertNotNull(response);
    }

    /**
     * remove event-loop from event-loop-group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeEventLoopTest() throws ApiException {
        addEventLoop();

        List<EventLoop> elListBefore = api.listEventLoop(elgName);
        int lenBefore = elListBefore.size();
        EventLoop elObject = api.getEventLoop(elgName, name);
        assertTrue(elListBefore.contains(elObject));

        api.removeEventLoop(elgName, name);

        List<EventLoop> elListAfter = api.listEventLoop(elgName);
        int lenAfter = elListAfter.size();

        assertEquals(lenBefore - 1, lenAfter);
        assertFalse(elListAfter.contains(elObject));
    }

}
